name: Run lint and tests

on:
  workflow_call:

jobs:
  test:
    strategy:
      matrix:
        include:
          - module: River Core
            path: :core
          - module: AMQP
            path: :connector:connector-amqp
            containers: rabbitmq
          - module: Apache Kafka
            path: :connector:connector-apache:connector-apache-kafka
            containers: zookeeper kafka
          - module: AWS Lambda
            path: :connector:connector-aws:connector-aws-lambda
            containers: localstack
          - module: AWS S3
            path: :connector:connector-aws:connector-aws-s3
            containers: localstack
          - module: AWS SQS
            path: :connector:connector-aws:connector-aws-sqs
            containers: localstack
          - module: AWS SNS
            path: :connector:connector-aws:connector-aws-sns
            containers: localstack
          - module: AWS SES
            path: :connector:connector-aws:connector-aws-ses
            containers: localstack
          - module: Azure Queue Storage
            path: :connector:connector-azure:connector-azure-queue-storage
            containers: azurite
          - module: Console
            path: :connector:connector-console
          - module: Elasticsearch
            path: :connector:connector-elasticsearch
            containers: elasticsearch
          - module: File
            path: :connector:connector-file
          - module: Formats (JSON, CSV, Positional Flat Line)
            path: :connector:connector-format
            runner: macos-latest
          - module: FTP
            path: :connector:connector-ftp
          - module: GitHub
            path: :connector:connector-github
          - module: Google Drive
            path: :connector:connector-google:connector-google-drive
          - module: HTTP
            path: :connector:connector-http
          - module: JMS
            path: :connector:connector-jms
          - module: MongoDB
            path: :connector:connector-mongodb
            containers: mongodb
          - module: OpenAI
            path: :connector:connector-openai
          - module: JDBC
            path: :connector:connector-rdbms:connector-rdbms-jdbc
            containers: postgresql
          - module: R2DBC
            path: :connector:connector-rdbms:connector-rdbms-r2dbc
          - module: Debezium
            path: :connector:connector-red-hat:connector-red-hat-debezium
            containers: mysql
          - module: Redis
            path: :connector:connector-redis
            containers: redis

    runs-on: ${{ matrix.runner || 'ubuntu-latest' }}

    name: ${{ matrix.module }} [${{ matrix.runner || 'ubuntu-latest' }}]

    env:
      colima-command: 'start --cpu 2 --memory 4 --mount-type 9p --network-address'

    steps:
      - uses: actions/checkout@v4

      - name: Restore Colima data [if needed] [macOS only]
        if: ${{ matrix.containers && runner.os == 'macos' }}
        uses: actions/cache@v3
        with:
          key: ${{ env.colima-command }}
          path: ~/.colima
          restore-keys: ${{ env.colima-command }}

      - name: Install Docker [if needed] [macOS only]
        if: ${{ matrix.containers && runner.os == 'macos' }}
        run: |
          brew install docker docker-compose
          mkdir -p ~/.docker/cli-plugins
          ln -sfn /usr/local/opt/docker-compose/bin/docker-compose ~/.docker/cli-plugins/docker-compose

      - name: Run Colima [if needed] [macOS only]
        if: ${{ matrix.containers && runner.os == 'macos' }}
        run: colima ${{ env.colima-command }}

      - name: Run docker-compose [if needed]
        if: ${{ matrix.containers }}
        run: docker compose up ${{ matrix.containers }} -d

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Run tests for ${{ matrix.module }}
        env:
          task: ${{ matrix.path }}:${{ matrix.task || 'allTests' }}
        run: |
          ./gradlew ${{ matrix.gradle-command || env.task }}

      - name: Store reports
        if: ${{ !cancelled() }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.module }} [${{ matrix.runner || 'ubuntu-latest' }}]
          path: |
            **/build/reports/
            **/build/test-results/
