[versions]
river = "1.0.0-alpha17"
kotlin = "1.9.22"
java = "17"
dokka = "1.9.10"
aws-sdk = "1.0.63"
aws-smithy-kotlin = "1.0.15"
coroutines = "1.7.3"
slf4j = "1.7.36"
commons-net = "3.8.0"
jackson = "2.15.2"
elasticsearch = "8.5.1"
rabbitmq = "5.16.0"
jms = "2.0.1"
activemq-artemis = "2.27.0"
r2dbc = "1.0.0.RELEASE"
azure = "12.6.0"
postgresql-jdbc = "42.6.0"
mysql-jdbc = "8.0.33"
debezium = "2.3.2.Final"
mongodb = "4.9.1"
apache-ftpserver = "1.2.0"
mock-ftpserver = "2.7.1"
kotest = "5.8.0"
wiremock = "2.27.2"
kotlin-wiremock = "2.0.2"
kotest-wiremock = "2.0.0"
ktor = "2.3.0"
java-jwt = "4.4.0"
redisson = "3.22.1"
reactor-kafka = "1.3.19"
reactor-kotlin = "1.2.2"
logback = "1.4.8"
turbine = "1.0.0"
kotlinx-datetime = "0.5.0"
android = "8.1.4"
setup-android-sdk = "3.1.0"
os-detector = "1.7.3"
android-compile-sdk = "30"
desugar-jdk-libs = "2.0.3"
mockk = "1.13.9"
test-logger = "4.0.0"

[plugins]
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }

kotest-multiplatform = { id = "io.kotest.multiplatform", version.ref = "kotest" }

android = { id = "com.android.library", version.ref = "android" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }

setup-android-sdk = { id = "com.quittle.setup-android-sdk", version.ref = "setup-android-sdk" }

dokka = { id = "org.jetbrains.dokka", version.ref = "dokka" }
nexus-publish = { id = "io.github.gradle-nexus.publish-plugin", version = "1.3.0" }

os-detector = { id = "com.google.osdetector", version.ref = "os-detector" }

test-logger = { id = "com.adarshr.test-logger", version.ref = "test-logger" }

[libraries]
# kotlin
coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
coroutines-reactive = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-reactive", version.ref = "coroutines" }
coroutines-jdk9 = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-jdk9", version.ref = "coroutines" }

kotlin = { module = "org.jetbrains.kotlin:kotlin-stdlib-jdk8", version.ref = "kotlin" }
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin" }

kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinx-datetime" }

# aws
aws-http = { module = "aws.sdk.kotlin:aws-http", version.ref = "aws-sdk" }
aws-smithy-http = { module = "aws.smithy.kotlin:http-client", version.ref = "aws-smithy-kotlin" }
aws-smithy-http-jvm = { module = "aws.smithy.kotlin:http-client-jvm", version.ref = "aws-smithy-kotlin" }
aws-sqs = { module = "aws.sdk.kotlin:sqs", version.ref = "aws-sdk" }
aws-sns = { module = "aws.sdk.kotlin:sns", version.ref = "aws-sdk" }
aws-s3 = { module = "aws.sdk.kotlin:s3", version.ref = "aws-sdk" }
aws-ses = { module = "aws.sdk.kotlin:ses", version.ref = "aws-sdk" }
aws-lambda = { module = "aws.sdk.kotlin:lambda", version.ref = "aws-sdk" }

desugar-jdk-libs = { module = "com.android.tools:desugar_jdk_libs", version.ref = "desugar-jdk-libs" }

# testing
kotest-assertions-core = { module = "io.kotest:kotest-assertions-core", version.ref = "kotest" }
kotest-engine = { module = "io.kotest:kotest-framework-engine", version.ref = "kotest" }
kotest-junit5 = { module = "io.kotest:kotest-runner-junit5", version.ref = "kotest" }
wiremock = { module = "com.github.tomakehurst:wiremock", version.ref = "wiremock" }
kotlin-wiremock = { module = "com.marcinziolo:kotlin-wiremock", version.ref = "kotlin-wiremock" }
kotest-wiremock = { module = "io.kotest.extensions:kotest-extensions-wiremock", version.ref = "kotest-wiremock" }

mockk = { module = "io.mockk:mockk", version.ref = "mockk" }

# ktor
ktor-server-core = { module = "io.ktor:ktor-server-core-jvm", version.ref = "ktor" }
ktor-server-netty = { module = "io.ktor:ktor-server-netty-jvm", version.ref = "ktor" }
ktor-content-renegotiation = { module = "io.ktor:ktor-server-content-negotiation", version.ref = "ktor" }
ktor-jackson = { module = "io.ktor:ktor-serialization-jackson", version.ref = "ktor" }

azure-queue-storage = { module = "com.azure:azure-storage-queue", version.ref = "azure" }

slf4j = { module = "org.slf4j:slf4j-api", version.ref = "slf4j" }
commons-net = { module = "commons-net:commons-net", version.ref = "commons-net" }

jackson = { module = "com.fasterxml.jackson.module:jackson-module-kotlin", version.ref = "jackson" }

elasticsearch = { module = "co.elastic.clients:elasticsearch-java", version.ref = "elasticsearch" }

amqp = { module = "com.rabbitmq:amqp-client", version.ref = "rabbitmq" }

jms-api = { module = "javax.jms:javax.jms-api", version.ref = "jms" }

artemis-client = { module = "org.apache.activemq:artemis-jms-client", version.ref = "activemq-artemis" }
artemis-server = { module = "org.apache.activemq:artemis-server", version.ref = "activemq-artemis" }

r2dbc-spi = { module = "io.r2dbc:r2dbc-spi", version.ref = "r2dbc" }
r2dbc-h2 = { module = "io.r2dbc:r2dbc-h2", version.ref = "r2dbc" }

postgresql-jdbc = { module = "org.postgresql:postgresql", version.ref = "postgresql-jdbc" }
mysql-jdbc = { module = "com.mysql:mysql-connector-j", version.ref = "mysql-jdbc" }

debezium-api = { module = "io.debezium:debezium-api", version.ref = "debezium" }
debezium-embedded = { module = "io.debezium:debezium-embedded", version.ref = "debezium" }
debezium-mysql = { module = "io.debezium:debezium-connector-mysql", version.ref = "debezium" }
debezium-postgres = { module = "io.debezium:debezium-connector-postgres", version.ref = "debezium" }

mongodb = { module = "org.mongodb:mongodb-driver-reactivestreams", version.ref = "mongodb" }

apache-ftpserver = { module = "org.apache.ftpserver:ftpserver-core", version.ref = "apache-ftpserver" }
mock-ftpserver = { module = "org.mockftpserver:MockFtpServer", version.ref = "mock-ftpserver" }

java-jwt = { module = "com.auth0:java-jwt", version.ref = "java-jwt" }

redisson = { module = "org.redisson:redisson", version.ref = "redisson" }

reactor-kafka = { module = "io.projectreactor.kafka:reactor-kafka", version.ref = "reactor-kafka" }
reactor-kotlin = { module = "io.projectreactor.kotlin:reactor-kotlin-extensions", version.ref = "reactor-kotlin" }

logback = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }

turbine = { module = "app.cash.turbine:turbine", version.ref = "turbine" }
